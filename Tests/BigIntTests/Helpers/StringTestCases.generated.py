#===--- StringTestCases.generated.py ---------------------------*- swift -*-===#
#
# This source file is part of the Swift Numerics open source project
#
# Copyright (c) 2023 Apple Inc. and the Swift Numerics project authors
# Licensed under Apache License v2.0 with Runtime Library Exception
#
# See https://swift.org/LICENSE.txt for license information
#
#===------------------------------------------------------------------------===#

from dataclasses import dataclass

@dataclass
class Radix:
    name: str
    num: int
    groups: 'list[Group]'

@dataclass
class Group:
    name: str
    strings: 'list[str]'

TEST_SUITES = [
    Radix('Binary', 2, [
        Group('singleWord', [
            "1100111011101101011000001101001100000111010111010001001011011111",
            "1111101001111100000100011110010100110111000111000010000010101011",
            "1010101000000000010110000110101100010000101011011101000000011111",
            "100111011011000011001000001000101100001010001100110001001100000",
            "100101110001011110101110001100011101011110100111010111010010011",
            "1100100111110100011110000101010101101010011111000110100010101000",
            "1001110110010011111100000111111010000100110010011001101111101",
            "101000001100111110010110000001111001100010100101011010000101011",
            "1011001011100101000101001101111111000110011111110010100110011101",
            "110001001001100000011000010001100001100101111100111100111011111"
        ]),
        Group('twoWords', [
            "1001010111000000011001110010011010011001010101000010000001111100110101011111111001110000111010011100001101001010100101010001011",
            "10110101001011101011011100010010110100001011100101100010110100101000101110111011101011110000110100110010000011110001111101011011",
            "10100100110001100010101010111111010100101000000101100000010100001000011011000101000101010100110111100100011001101110111010100111",
            "101001000110111101111011100010100111000011101101100101000011010000010000011101101011101000101011101111101011101110011001000110",
            "1010110101111011110001001010101111011010100101110010111000001100011110001110001010001001101001101010110101001000101100010111000",
            "10011100000010010010000000100011000011101010110110001111010111110111100111100100111001010000110000000010111101101000110101001",
            "1110010111010011100100010110001000000100000000000011100101010011000101011010001001100011000010110110111101111111111101111",
            "11011000000110100101000110000001110110000000011110011000111011100000011000001110011001110111101010100000010101000011011011010000",
            "10111010111010100010000000011010111011111101001100000111110001111001111001110000010111010010001100010000101011001101000100101100",
            "11111110000010110011011111011111000010011110101011101010010010001110011111010100000100001110111100010011100100110111001100110100"
        ]),
    ]),

    Radix('Quinary', 5, [
        Group('singleWord', [
            "1141011330110244430443234403",
            "1222004313120111310102442141",
            "2103043303342222322321322331",
            "112432412234101120414313034",
            "303003222112001403223431323",
            "344142232044113412301430224",
            "1220020343312232444212101300",
            "2142220433422310201433143031",
            "1100240414331322213333313314",
            "1142232034423230304021344224"
        ]),
        Group('twoWords', [
            "203123203032243200414100331344240044242020031202313304",
            "2241012313012133231212400333342433431343403034400222232",
            "4203331403433210032231444444420301011232202040320244034",
            "10232010021201310022422112231324444321204423440331141040",
            "11001404212423031440100214040300432233323022042011441003",
            "31000242443014011010113041320310341223011340044321112",
            "104440411024104113410312042432323043144001330034323023",
            "4313032440022022004204011201231102003140212144013012024",
            "222241220112410000313023011200201140300201034000223104",
            "4142443213143020430040201142133120302113431131300414310"
        ]),
    ]),

    Radix('Octal', 8, [
        Group('singleWord', [
            "765107426714576726434",
            "267013363740675530517",
            "1116473563031361443420",
            "402115621515715443232",
            "763120023606053712451",
            "1331662240274670615110",
            "61361450215541537600",
            "667611024411512075216",
            "1766576732635234733764",
            "24762136610221532221"
        ]),
        Group('twoWords', [
            "405353062163251224075541120406576603642133",
            "1155525567215754355762261022040102502663535",
            "473760700275426615762334030650135006412004",
            "3631321221020124075140070266326054733736654",
            "2301713511046076774644163027526344262614750",
            "1416756055467752004624014151506657745444701",
            "277372133117223126207604631572452705305761",
            "3233035510177647760346424273160270510130153",
            "3603463414404503570230716440162341562104627",
            "52174705323046362171603350231267240463067"
        ]),
        Group('threeWords', [
            "752710076366767021311145241064414721036644045634530560410662164",
            "2351074425357060771500511210531201334130757470561023603752203522",
            "2026330410062602113214720620652354122635242532243542521246347130",
            "2374670546314622762117042710735422651021224342402213330677717022",
            "2516462603442110716460774444162701130544323471604701667527612160",
            "4752321765021165454357330136132660667377344246225716247045110530",
            "2207017273376155030021416376730413255440672604251274423333345737",
            "6012155132310337104403010016271520303605661047423036543777774653",
            "2405264541731765272641476323011120172731141622224604547111014030",
            "102016446227413552760304443460703260141047363565146174776151646"
        ]),
    ]),

    Radix('Decimal', 10, [
        Group('singleWord', [
            "7718190171501264284",
            "10916363490721922425",
            "7933533405371913824",
            "10480426996613498135",
            "2095192256445644812",
            "7419235996356813804",
            "1781771517166335135",
            "11133038279461172192",
            "2130720192200721827",
            "14853271410540786435",
            "6950267042901794576",
            "10411748895426429475",
            "9833709291961056769",
            "5999039672382756712",
            "16110142630232532658",
            "12607569496212494176",
            "1675868323700977277",
            "16806170715214457379",
            "16940169654426845777",
            "8827990282256005918"
        ]),
        Group('twoWords', [
            "174279629237543296687673032485957064212",
            "47412561600764236150769686558222116091",
            "10395912425457665851645833014443244462",
            "164315376478873129818157066650996676197",
            "10602886535953881315042562817407645178",
            "8248650871275789350502376241754844651",
            "34524867949202500042981821345963565272",
            "134216757748210966888150667727713411016",
            "171102533986768447955502501639763888523",
            "54844876601597866882605545088807789686",
            "56893583067640428051926870614216611763",
            "324345033888321898323997479933055678710",
            "303929611043690622871586457595241643110",
            "247198033769360767204907027173829796027",
            "21778317495144550468861398478632800064",
            "84588039840439783849569873830235438676",
            "311126277149403728470285334436356936983",
            "139898191933164899225423319256353529614",
            "2043258753110477277143778428409140808",
            "337382537729550367819433505076096015588"
        ]),
        Group('threeWords', [
            "6083614195465063921457756617643704987757901496806223861094",
            "4559809898618458323618774365881241097705852866053722576068",
            "6000655493235750363443630214517832475022981384493522723977",
            "3448761127815156638054418593304414317156905140903945500758",
            "4031646778810151685478902878630817277976717194269043459535",
            "5187043450362884349943980736394397527883291975412376418584",
            "867137008351148227772945110512985612059866264001066314234",
            "405425063163426737085717989265456363407329145867582794766",
            "516394380123300269594485907074283812975608688889426642145",
            "5812603356047926610460197272765392220238610608713665689986",
            "984508521516077779720769747676107292251302380633744113615",
            "3607214625740907391200152863690596886095271299895459353996",
            "3555336686841570490688168198501982767988360618443302183344",
            "5421257579835065546517323313625099317184145652987724078671",
            "5289825533547636872288114877966109957241807144779629060472",
            "2220442274754652930479991837181424586345958361124409139160",
            "2503918262582474917700425110083118534477438840011330691707",
            "2932737070354268352744296521741629050767038012966002878856",
            "5936703106691826260722357215905339148900071080037029998472",
            "638165476008693250974186539568945174625645764897016299466"
        ]),
        Group('fourWords', [
            "98329738845668996570124208357521780017272355350396828224707284828351881091866",
            "105623193693730296505637022908493828321474575998233295842297319498067956265586",
            "27744159210101084003408741123228345882260348087436638008210479865903937724447",
            "43975332751786641545687151785881018379208099070772924031466259723893919847420",
            "7291043565309214047592216113421685977429724781349367031290578029129539586602",
            "83988462562950544098864456303214580453611103336990060118099235083777904234247",
            "32980242605770942006188369357622369959610697780125045082756386640312378695240",
            "22417645777855749287001476980921879614161082692816351875309530936088143706194",
            "7263649581484524992809489869886295226321246688450694700744863589918010440354",
            "24728838211123196082450064688238894776920371466824252419807721449583553632242"
        ]),
    ]),

    Radix('Hex', 16, [
        Group('singleWord', [
            "7d48f16e65fbad1c",
            "2dc16f3f06f6b14f",
            "93a77730cbc64710",
            "4089b91a6f36469a",
            "7cca013c30af9529",
            "b6764a05e6e31a48",
            "c5e32846d86bf80",
            "6df121484d287a8e",
            "fdafddacea73b7f4",
            "53e45ec4246b491"
        ]),
        Group('twoWords', [
            "d84a106bf60f445b20aeb191cd52941e",
            "2c424202150b675d4db55bba37d8edf9",
            "37031a82e81a1404277f0e02f62d8df9",
            "e16cd61676fbdacf32d148840a83d30",
            "1cc2f56722cb19e8983cba48987dfcd2",
            "30d346d7f9649c161dee16cdfd404ca",
            "e13337a957158bf117efa2d93d265643",
            "45176705c520b06bd361da41ff4ff073",
            "73a407270dc88997f07338641287784c",
            "e0dd0995ba8266370547ce2b4c4cf23c"
        ]),
        Group('threeWords', [
            "1eae40f9edf708b24caa11a433a21ed20973958b84236474",
            "4e91e455de30fcd029288aca05b858f7ce2e213c1fa90752",
            "4166c420658225a33a190d53b0a59d515694762a8a99ce58",
            "4fcdc5999992f913c45c8eec4b52114a38a048b6c6ff9e12",
            "54e9960e4448e74c3f92439704b16469ce709c1dbd5f1470",
            "9ea68fd42275963bdb05e2d6c36eff722992bce538949158",
            "48707aedfc6d0c0461cfeec42d5b20dd61152bc89b6dcbdf",
            "c0a3696990df2240c100e5cd418785d889e261eb1ffff9ab",
            "5055a587b3f55d6867cd304940f5d930e492984b39241818",
            "42074992f0bb57c189239870d606113bceea663e7f8d3a6"
        ]),
    ]),
]

# UInt64.max + 1
# See the comment in 'BigIntPrototype.create' for '+1' explanation
POWER = 18446744073709551615 + 1

def main():
    print('''\
//===--- StringTestCases.generated.swift ----------------------*- swift -*-===//
//
// This source file is part of the Swift Numerics open source project
//
// Copyright (c) 2023 Apple Inc. and the Swift Numerics project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
//
//===----------------------------------------------------------------------===//
// Automatically generated. DO NOT EDIT!
// To regenerate:
// python3 StringTestCases.generated.py > StringTestCases.generated.swift
//===----------------------------------------------------------------------===//

// swiftlint:disable line_length
// swiftlint:disable trailing_comma
// swiftformat:disable numberFormatting

extension StringTestCases {\
''')

    for radix in TEST_SUITES:
        print()
        print(f'  // MARK: - {radix.name}')
        print()
        print(f'  internal enum {radix.name} {{')

        for group in radix.groups:
            print()
            print(f'    internal static let {group.name} = TestSuite(radix: {radix.num}, cases: [')

            for s in group.strings:
                words = []
                i = int(s, radix.num)

                while i != 0:
                    d, m = divmod(i, POWER)
                    words.append(m)
                    i = d

                print(f'      TestCase({words}, "{s}"),')
            print('    ])')

        print('  }')

    print('}')

if __name__ == '__main__':
    main()
